// Authentication and user management models

enum Role {
  ADMIN
  USER
}

model User {
  id                  String   @id @default(cuid())
  name                String?
  username            String?  @unique
  email               String?  @unique
  emailVerified       DateTime?
  image               String?

  // For credential-based auth
  hashedPassword      String?

  // Authorization & security
  role                Role     @default(USER)
  isTwoFactorEnabled  Boolean  @default(false)
  twoFactorSecret     String?

  // Relations
  accounts            Account[]
  sessions            Session[]
  profile             Profile?

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
